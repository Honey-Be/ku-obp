제대로 하려면 게임 상태를 서버에서 관리해야 한다. AI 모드도 서버에서 관리하면 좋긴 하다. Redis 도입 고민 중이다.
useDataChannel은 현재 방에 있는 사람들에게만 메시지를 보내며, 보내는 데이터도 기물 움직임뿐이다 . 따라서 중간에 누가 들어오면 그 사람은 초기 기물 배치 화면을 보게 된다.
A의 움직임을 B가 받아서, 받은 데이터로 B 클라이언트의 기물이 움직인다. 그런데 그 움직임을 다시 B가 보내기 때문에 A가 다시 동작을 취하면서 에러가 발생한다. movePiece()에 세번째 파라미터를 추가해서, 만약 받은 데이터로 움직이는 상황이면 publish를 하지 않는 로직으로 해결했다.
Game Room 로직 전반적으로 보완해야 한다. 누가 호스트고 누가 상대방이고, 누가 흰색이고 누가 검은색이고, 누가 플레이어고 누가 시청자인지 나누는 로직이 필요하다. 기물 조작은 플레이어만 할 수 있고 시청자는 볼 수만 있어야 한다. 색깔 바꾸기 요청하면 받아주는 기능은 고민 중이다. 호스트 흰색, 상대방 검은색으로 고정하거나 랜덤으로 설정해도 상관은 없을 것 같다.
전반적인 아키텍쳐 수정이 필요하다.

